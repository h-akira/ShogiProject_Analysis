AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 2048

Parameters:
  DynamoDBTable:
    Type: String
    Default: 'table-sgp-pro-main'
    Description: 'DynamoDB table name for the application.'
  SQSQueueName:
    Type: String
    Default: 'sqs-sgp-analysis.fifo'
    Description: 'SQS FIFO queue name for analysis tasks.'
  MaximumConcurrency:
    Type: Number
    Default: 8
    Description: 'Maximum concurrent executions for SQS Lambda scaling.'
    MinValue: 1
    MaxValue: 100

Resources:
  AnalysisQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref SQSQueueName
      FifoQueue: true
      ContentBasedDeduplication: false
      VisibilityTimeout: 120
      MessageRetentionPeriod: 60
      DelaySeconds: 0
      ReceiveMessageWaitTimeSeconds: 0
      MaximumMessageSize: 262144
      DeduplicationScope: queue
      FifoThroughputLimit: perQueue
      SqsManagedSseEnabled: true
  
  SampleFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Role: !GetAtt LambdaExecutionRole.Arn
      FunctionName: 'lambda-sgp-analysis'
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DynamoDBTable
          SQS_QUEUE_NAME: !Ref SQSQueueName
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt AnalysisQueue.Arn
            BatchSize: 1
            MaximumBatchingWindowInSeconds: 0
            ScalingConfig:
              MaximumConcurrency: !Ref MaximumConcurrency
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./ShogiCPU
      DockerTag: v1
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'role-sgp-analysis-lambda-exec'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: "policy-sgp-analysis-lambda-exec"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ssm:GetParameter"
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                  - "dynamodb:GetItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                Resource: "*"

Outputs:
  AnalysisQueueUrl:
    Description: "SQS Queue URL for analysis tasks"
    Value: !Ref AnalysisQueue
  AnalysisQueueArn:
    Description: "SQS Queue ARN for analysis tasks"
    Value: !GetAtt AnalysisQueue.Arn
  LambdaFunctionName:
    Description: "Lambda function name for analysis"
    Value: !Ref SampleFunction
